{"version":3,"sources":["components/Menu.js","components/Chart.js","App.js","index.js"],"names":["Menu","onCategorySelectChange","key","props","category","onChange","Row","className","Col","md","htmlFor","Dropdown","onSelect","this","Toggle","variant","id","categories","map","el","index","Item","eventKey","React","Component","toolTip","d","d3","attr","instance","_tippy","wordHeight","node","getBoundingClientRect","height","rand","Math","floor","random","phrases","length","tippy","allowHTML","content","phrase","author","offset","round","hideOnClick","hide","setTimeout","destroy","Chart","context","drawChart","jsondata","words","formatData","text","keyword","count","size","max","mean","element","m","w","width","h","cloud","canvas","Canvas","createCanvas","padding","font","fontSize","maxratio","widthratio","on","append","selectAll","data","enter","style","interpolatePlasma","x","y","rotate","start","state","window","innerHeight","innerWidth","csv","forEach","Popularity","Category","Tags","tag","some","toLowerCase","push","Quote","Author","t","debouncedHandleResize","fn","ms","timer","_","clearTimeout","apply","arguments","debounce","setState","jsonData","addEventListener","remove","App","getCategories","onSelectChange","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39728fd9.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Dropdown } from 'react-bootstrap'\n\nclass Menu extends React.Component {\n    onCategorySelectChange = (key) => {\n        if (key !== this.props.category) {\n            var category = key\n            this.props.onChange(category)\n        }\n    }\n    render() {\n        return (\n            <menu>\n                <Row className=\"show-grid\">\n                    <Col md={12}>\n                        <label htmlFor=\"category\">Choose a category:</label>\n                        <Dropdown onSelect={this.onCategorySelectChange}>\n                            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                {this.props.category}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {this.props.categories.map((el, index) => {\n                                    return <Dropdown.Item key={index} eventKey={el}>{el}</Dropdown.Item>\n                                })}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col>\n                </Row>\n            </menu>\n        )\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport * as d3 from 'd3';\nimport { interpolatePlasma } from \"d3-scale-chromatic\";\nimport Canvas from 'canvas';\nimport cloud from 'd3-cloud';\nimport tippy from 'tippy.js';\nimport 'tippy.js/dist/tippy.css';\n\nvar sel = \"#chart\",\n    toolTip = {\n        Create: function (d) {\n            d3.select(this).attr('class', 'text--hover')\n            const instance = this._tippy,\n                wordHeight = d3.select(this).node().getBoundingClientRect().height;\n            if (!instance) {\n                let rand = d['phrases'][Math.floor(Math.random() * d.phrases.length)]\n                tippy(this, {\n                    allowHTML: true,\n                    content: `<div class=\"quote\">“${rand.phrase}”</div><div class=\"attribution\">—${rand.author}</div>`,\n                    offset: function () { return [0, -Math.round(wordHeight / 4)] },\n                    hideOnClick: false\n                })\n            }\n        },\n        Remove: function (d) {\n            d3.select(this).attr('class', '')\n            const instance = this._tippy;\n            if (instance) {\n                instance.hide();\n                setTimeout(\n                    function () {\n                        instance.destroy();\n                    }, 250);\n            }\n        }\n    }\n\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nclass Chart extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            height: window.innerHeight,\n            width: window.innerWidth,\n            csv: []\n        };\n    }\n    formatData(category, jsondata) {\n        var data = []\n        jsondata.forEach(element => {\n            if (element.Popularity < .01) return\n            const matchesCategory = category === \"Any\" ? true : category === element.Category\n            if (matchesCategory) {\n                element.Tags.forEach(tag => {\n                    var found = data.some(el => {\n                        return tag.toLowerCase() === el.keyword.toLowerCase()\n                    })\n                    if (found) {\n                        data.forEach(el => {\n                            if (tag === el.keyword) {\n                                el.count++\n                                el.phrases.push({\n                                    phrase: element.Quote,\n                                    category: element.Category,\n                                    author: element.Author\n                                })\n                            }\n                        })\n                    }\n                    else {\n                        data.push({\n                            keyword: tag,\n                            count: 1,\n                            phrases: [{\n                                phrase: element.Quote,\n                                category: element.Category,\n                                author: element.Author\n                            }]\n                        })\n                    }\n                })\n            }\n        })\n        return data\n    }\n    drawChart = (category, jsondata) => {\n        var data = this.formatData(category, jsondata),\n            words = data.map(function (d) {\n                return { text: d.keyword, count: d.count, size: d.count, phrases: d.phrases };\n            });\n\n        var min = d3.min(words, function (d) { return +d.size }),\n            max = d3.max(words, function (d) { return +d.size }),\n            mean = d3.mean(words, function (d) { return +d.size }),\n            median = d3.median(words, function (d) { return +d.size });\n\n        var element = d3.select(sel).node(),\n            m = [20, 20, 20, 20],\n            w = element.getBoundingClientRect().width - m[1] - m[3],\n            h = element.getBoundingClientRect().height - m[0] - m[2]\n\n        var layout = cloud().size([w + m[1] + m[3], h + m[0] + m[2]])\n            .canvas(function () { return Canvas.createCanvas(1, 1); })\n            .words(words)\n            .padding(function (d) { return Math.round(d.size / 20) + 4 })\n            .font(\"Amatic\")\n            .fontSize(function (d) {\n                var maxratio = 366 / max,\n                    widthratio = element.getBoundingClientRect().width / 800;\n                return Math.round(((d.size / (max / mean))) * maxratio * 8 * widthratio) + 20;\n            })\n            .on(\"end\", draw)\n\n        layout.start();\n\n        function draw(words) {\n            d3.select(sel).append(\"svg\")\n                .attr(\"width\", w + m[1] + m[3])\n                .attr(\"height\", h + m[0] + m[2])\n                .attr(\"class\", \"wordcloud\")\n                .append(\"g\")\n                .attr(\"transform\", `translate(${(w + m[1] + m[3]) / 2},${(h + m[0] + m[2]) / 2})`)\n                .selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .on('mouseover', toolTip.Create)\n                .on('mouseout', toolTip.Remove)\n                .attr('data-count', function (d) { return d.count })\n                .style({\n                    \"font-family\": function (d) { return d.font; },\n                    \"font-size\": function (d) { return d.size + \"px\"; },\n                    \"text-transform\": \"uppercase\",\n                    \"fill\": function (d) { return interpolatePlasma(d.count / 100) },\n                    \"cursor\": \"pointer\"\n                })\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n                })\n                .text(function (d) { return d.text; });\n        }\n    }\n    componentDidMount() {\n        const t = this,\n            debouncedHandleResize = debounce(function handleResize() {\n                t.setState({\n                    height: window.innerHeight,\n                    width: window.innerWidth\n                })\n            }, 1000)\n\n        t.drawChart(t.props.category, t.props.jsonData)\n        window.addEventListener('resize', debouncedHandleResize)\n    }\n    componentDidUpdate() {\n        d3.select(\"#chart svg\").remove()\n        d3.selectAll(\"[data-tippy-root]\").remove();\n        this.drawChart(this.props.category, this.props.jsonData)\n    }\n    render() {\n        return <main id='chart'></main>\n    }\n}\n\nexport default Chart;","import React from 'react';\nimport Menu from './components/Menu';\nimport Chart from './components/Chart';\nimport jsonData from './data/quotes.json';\n\nconst default_category = \"Any\"\n\nclass App extends React.Component {\n  state = {\n    category: default_category,\n    categories: this.getCategories()\n  }\n  onSelectChange = (d) => {\n    this.setState({\n      category: d\n    })\n  }\n  getCategories() {\n    let data = [default_category];\n    jsonData.forEach(element => {\n      if (element.Popularity < .125) return\n      const found = data.includes(element.Category)\n      if (!found) {\n        data.push(element.Category)\n      }\n    })\n    return data\n  }\n  render() {\n    return (\n      <>\n        <Menu category={this.state.category} categories={this.state.categories} onChange={this.onSelectChange} />\n        <Chart category={this.state.category} jsonData={jsonData} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import \"core-js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}